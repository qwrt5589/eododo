repeat task.wait() until game:IsLoaded() 
local library = {} 
local ToggleUI = false 
library.currentTab = nil 
library.flags = {} 
local services = setmetatable({}, { __index = function(t, k) return game.GetService(game, k) end }) 
local mouse = services.Players.LocalPlayer:GetMouse() 

function Tween(obj, t, data) 
	services.TweenService:Create(obj, TweenInfo.new(t[1], Enum.EasingStyle[t[2]], Enum.EasingDirection[t[3]]), data):Play() 
	return true 
end 

function Ripple(obj) 
	spawn(function() 
		if obj.ClipsDescendants ~= true then 
			obj.ClipsDescendants = true 
		end 
		local Ripple = Instance.new("ImageLabel") 
		Ripple.Name = "Ripple" 
		Ripple.Parent = obj 
		Ripple.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
		Ripple.BackgroundTransparency = 1.000 
		Ripple.ZIndex = 8 
		Ripple.Image = "rbxassetid://79399049294493" 
		Ripple.ImageTransparency = 0.800 
		Ripple.ScaleType = Enum.ScaleType.Fit 
		Ripple.ImageColor3 = Color3.fromRGB(139, 0, 255) 
		Ripple.Position = UDim2.new((mouse.X - Ripple.AbsolutePosition.X) / obj.AbsoluteSize.X, 0, (mouse.Y - Ripple.AbsolutePosition.Y) / obj.AbsoluteSize.Y, 0) 
		Tween(Ripple, {.3, 'Linear', 'InOut'}, {Position = UDim2.new(-5.5, 0, -5.5, 0), Size = UDim2.new(12, 0, 12, 0)}) 
		wait(0.15) 
		Tween(Ripple, {.3, 'Linear', 'InOut'}, {ImageTransparency = 1}) 
		wait(.3) 
		Ripple:Destroy() 
	end) 
end 

local toggled = false 

-- # Switch Tabs # -- 
local switchingTabs = false 
function switchTab(new) 
if switchingTabs then return end 
local old = library.currentTab 
if old == nil then 
	new[2].Visible = true 
	library.currentTab = new 
	services.TweenService:Create(new[1], TweenInfo.new(0.1), {ImageTransparency = 0}):Play() 
	services.TweenService:Create(new[1].TabText, TweenInfo.new(0.1), {TextTransparency = 0}):Play() 
	return 
end 
if old[1] == new[1] then return end 
switchingTabs = true 
library.currentTab = new 
services.TweenService:Create(old[1], TweenInfo.new(0.1), {ImageTransparency = 0.2}):Play() 
services.TweenService:Create(new[1], TweenInfo.new(0.1), {ImageTransparency = 0}):Play() 
services.TweenService:Create(old[1].TabText, TweenInfo.new(0.1), {TextTransparency = 0.2}):Play() 
services.TweenService:Create(new[1].TabText, TweenInfo.new(0.1), {TextTransparency = 0}):Play() 
old[2].Visible = false 
new[2].Visible = true 
task.wait(0.1) 
switchingTabs = false 
end 

-- # Drag, Stolen from Kiriot or Wally # -- 
function drag(frame, hold) 
	if not hold then 
		hold = frame 
	end 
	local dragging 
	local dragInput 
	local dragStart 
	local startPos 
	local function update(input) 
		local delta = input.Position - dragStart 
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) 
结束
hold.InputBegin：连接(函数(输入)
如果input.UserInputType==Enum.UserInputType.MouseButton1，则
拖动=真
dragstart=输入.位置
startpos=frame.Position
input.Changed:Connect(函数()
如果input.UserInputState==Enum.UserInputState.End，则
拖动=false
结束
结束)
结束
结束)
frame.InputChanged：连接(函数(输入)
如果input.UserInputType==Enum.UserInputType.MouseMovement，则
dragInput=输入
结束
结束)
服务。UserInputService。InputChanged:Connect(函数(输入)
如果输入==拖动输入并拖动，则
更新(输入)
结束
结束)
结束

函数库.new(库、名称、主题)
for_，vinext，services.CoreGui:GetChildren()do
如果v.Name=="frosty"，则
v:Destroy() 
end 
结束

-------------------------AL------------------------------
ALT透明度=0.6
ALCOLOR=Color3.fromRGB(0，255，127)
-------------------------AL------------------------------

如果主题=='深色'则
MainColor=Color3.fromRGB(25，25，25)
背景=颜色3.来自RGB(25，25，25)
zyColor=Color3.fromRGB(25，25，25)
beijingColor=Color3.fromRGB(25，25，25)
其他
MainColor=Color3.fromRGB(25，25，25)
背景=颜色3.来自RGB(25，25，25)
zyColor=Color3.fromRGB(25，25，25)
beijingColor=Color3.fromRGB(25，25，25)
结束

本地dogent=Instance.new("ScreenGui")
本地主=Instance.new("Frame")
local TabMain = Instance.new("Frame") 
local MainC = Instance.new("UICorner") 
local SB = Instance.new("Frame") 
local SBC = Instance.new("UICorner") 
local Side = Instance.new("Frame") 
local SideG = Instance.new("UIGradient") 
local TabBtns = Instance.new("ScrollingFrame") 
local TabBtnsL = Instance.new("UIListLayout") 
local ScriptTitle = Instance.new("TextLabel") 
local SBG = Instance.new("UIGradient") 
local Open = Instance.new("ImageButton") 
local UIG=Instance.new("UIGradient") 
local DropShadowHolder = Instance.new("Frame") 
local DropShadow = Instance.new("ImageLabel") 
local UICornerMain = Instance.new("UICorner") 
local UIGradient=Instance.new("UIGradient") 
local UIGradientTitle=Instance.new("UIGradient") 
local Frame = Instance.new("Frame") 
local UICorner = Instance.new("UICorner") 
local UICorner_2 = Instance.new("UICorner") 

if syn and syn.protect_gui then 
syn.protect_gui(dogent) 
end 

dogent.Name = "frosty" 
dogent.Parent = services.CoreGui 

function UiDestroy() 
dogent:Destroy() 
end 

function ToggleUILib() 
if not ToggleUI then 
dogent.Enabled = false 
ToggleUI = true 
else 
ToggleUI = false 
dogent.Enabled = true 
end 
end 

Main.Name = "Main" 
Main.Parent = dogent 
Main.AnchorPoint = Vector2.new(0.5, 0.5) 
Main.BackgroundColor3 = Background 
Main.BorderColor3 = MainColor 
Main.Position = UDim2.new(0.5, 0, 0.5, 0) 
Main.Size = UDim2.new(0, 572, 0, 353) 
Main.ZIndex = 1 
Main.Active = true 
Main.Draggable = true 
Main.Transparency = 1.0 

services.UserInputService.InputEnded:Connect(function(input) 
if input.KeyCode == Enum.KeyCode.LeftControl then 
if Main.Visible == true then 
Main.Visible = false 
else 
Main.Visible = true 
end 
end 
end) 

drag(Main) 

UICornerMain.Parent = Main 
UICornerMain.CornerRadius = UDim.new(0,3) 

DropShadowHolder.Name = "DropShadowHolder" 
DropShadowHolder.Parent = Main 
DropShadowHolder.BackgroundTransparency = 1.000 
DropShadowHolder.BorderSizePixel = 0 
DropShadowHolder.Size = UDim2.new(1, 0, 1, 0) 
DropShadowHolder.BorderColor3 = Color3.fromRGB(255,255,255) 
DropShadowHolder.ZIndex = 0 

DropShadow.Name = "DropShadow" 
DropShadow.Parent = DropShadowHolder 
DropShadow.AnchorPoint = Vector2.new(0.5, 0.5) 
DropShadow.BackgroundTransparency = 1.000 
DropShadow.Position = UDim2.new(0.5, 0, 0.5, 0) 
DropShadow.Size = UDim2.new(1, 10, 1, 10) 
DropShadow.Image = "rbxassetid://79399049294493" 
DropShadow.ImageColor3 = Color3.fromRGB(255,255,255) 
DropShadow.SliceCenter = Rect.new(49, 49, 450, 450) 

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(0.10, Color3.fromRGB(255, 127, 0)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(255, 255, 0)), ColorSequenceKeypoint.new(0.30, Color3.fromRGB(0, 255, 0)), ColorSequenceKeypoint.new(0.40, Color3.fromRGB(0, 255, 255)), ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 0, 255)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(139, 0, 255)), ColorSequenceKeypoint.new(0.70, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(0.80, Color3.fromRGB(255, 127, 0)), ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 255, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 0))} 

local TweenService = game:GetService("TweenService") 
local tweeninfo = TweenInfo.new(7, Enum.EasingStyle.Linear, Enum.EasingDirection.In, -1) 
local tween = TweenService:Create(UIGradient, tweeninfo, {Rotation = 360}) 
tween:Play() 

function toggleui() 
toggled = not toggled 
spawn(function() 
if toggled then 
wait(0.3) 
end 
end) 
Tween(Main, {0.3, 'Sine', 'InOut'}, { Size = UDim2.new(0, 609, 0, (toggled and 505 or 0)) }) 
end 

TabMain.Name = "TabMain" 
TabMain.Parent = Main 
TabMain.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
TabMain.BackgroundTransparency = 1.000 
TabMain.Position = UDim2.new(0.217000037, 0, 0, 3) 
TabMain.Size = UDim2.new(0, 448, 0, 353) 
TabMain.Transparency = 1.0 

MainC.CornerRadius = UDim.new(0, 5.5) 
MainC.Name = "MainC" 
MainC.Parent = Frame 

SB.Name = "SB" 
SB.Parent = Main 
SB.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
SB.BorderColor3 = MainColor 
SB.Size = UDim2.new(0, 8, 0, 353) 
SB.Transparency = 1.0 

SBC.CornerRadius = UDim.new(0, 6) 
SBC.Name = "SBC" 
SBC.Parent = SB 

Side.Name = "Side" 
Side.Parent = SB 
Side.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
Side.BorderColor3 = Color3.fromRGB(139, 0, 255) 
Side.BorderSizePixel = 0 
Side.ClipsDescendants = true 
Side.Position = UDim2.new(1, 0, 0, 0) 
Side.Size = UDim2.new(0, 110, 0, 353) 
Side.Transparency = 1.0 

SideG.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, zyColor), ColorSequenceKeypoint.new(1.00, zyColor)} 
SideG.Rotation = 90 
SideG.Name = "SideG" 
SideG.Parent = Side 

TabBtns.Name = "TabBtns" 
TabBtns.Parent = Side 
TabBtns.Active = true 
TabBtns.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
TabBtns.BackgroundTransparency = 1.000 
TabBtns.BorderSizePixel = 0 
TabBtns.Position = UDim2.new(0, 0, 0.0973535776, 0) 
TabBtns.Size = UDim2.new(0, 110, 0, 318) 
TabBtns.CanvasSize = UDim2.new(0, 0, 1, 0) 
TabBtns.ScrollBarThickness = 0 

TabBtnsL.Name = "TabBtnsL" 
TabBtnsL.Parent = TabBtns 
TabBtnsL.SortOrder = Enum.SortOrder.LayoutOrder 
TabBtnsL.Padding = UDim.new(0, 12) 

ScriptTitle.Name = "ScriptTitle" 
ScriptTitle.Parent = Side 
ScriptTitle.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
ScriptTitle.BackgroundTransparency = 1.000 
ScriptTitle.Position = UDim2.new(0, 0, 0.00953488424, 0) 
ScriptTitle.Size = UDim2.new(0, 102, 0, 20) 
ScriptTitle.Font = Enum.Font.GothamSemibold 
ScriptTitle.Text = name 
ScriptTitle.TextColor3 = Color3.fromRGB(139, 0, 255) 
ScriptTitle.TextSize = 14.000 
ScriptTitle.TextScaled = true 
ScriptTitle.TextXAlignment = Enum.TextXAlignment.Left 

UIGradientTitle.Parent = ScriptTitle 

local function NPLHKB_fake_script() 
local script = Instance.new('LocalScript', ScriptTitle) 
local button = script.Parent 
local gradient = button.UIGradient 
local ts = game:GetService("TweenService") 
local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out) 
local offset = {Offset = Vector2.new(1, 0)} 
local create = ts:Create(gradient, ti, offset) 
local startingPos = Vector2.new(-1, 0) 
local list = {} 
local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new 
local counter = 0 
local status = "down" 
gradient.Offset = startingPos 

local function rainbowColors() 
local sat, val = 255, 255 
for i = 1, 10 do 
local hue = i * 17 
table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255)) 
end 
end 

rainbowColors() 
gradient.Color = s({ kpt(0, list[#list]), kpt(0.5, list[#list - 1]), kpt(1, list[#list - 2]) }) 
counter = #list 

local function animate() 
create:Play() 
create.Completed:Wait() 
gradient.Offset = startingPos 
gradient.Rotation = 180 

if counter == #list - 1 and status == "down" then 
gradient.Color = s({ kpt(0, gradient.Color.Keypoints[1].Value), kpt(0.5, list[#list]), kpt(1, list[1]) }) 
counter = 1 
status = "up" 
elseif counter == #list and status == "down" then 
gradient.Color = s({ kpt(0, gradient.Color.Keypoints[1].Value), kpt(0.5, list[1]), kpt(1, list[2]) }) 
counter = 2 
status = "up" 
elseif counter <= #list - 2 and status == "down" then 
gradient.Color = s({ kpt(0, gradient.Color.Keypoints[1].Value), kpt(0.5, list[counter + 1]), kpt(1, list[counter + 2]) }) 
counter = counter + 2 
status = "up" 
end 

create:Play() 
create.Completed:Wait() 
gradient.Offset = startingPos 
gradient.Rotation = 0 

if counter == #list - 1 and status == "up" then 
gradient.Color = s({ kpt(0, list[1]), kpt(0.5, list[#list]), kpt(1, gradient.Color.Keypoints[3].Value) }) 
counter = 1 
status = "down" 
elseif counter == #list and status == "up" then 
gradient.Color = s({ kpt(0, list[2]), kpt(0.5, list[1]), kpt(1, gradient.Color.Keypoints[3].Value) }) 
counter = 2 
status = "down" 
elseif counter <= #list - 2 and status == "up" then 
gradient.Color = s({ kpt(0, list[counter + 2]), kpt(0.5, list[counter + 1]), kpt(1, gradient.Color.Keypoints[3].Value) 	 }) 
counter = counter + 2 
status = "down" 
end 
animate() 
end 
animate() 
end 
coroutine.wrap(NPLHKB_fake_script)() 

SBG.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, zyColor), ColorSequenceKeypoint.new(1.00, zyColor)} 
SBG.Rotation = 90 
SBG.Name = "SBG" 
SBG.Parent = SB 

TabBtnsL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() 
TabBtns.CanvasSize = UDim2.new(0, 0, 0, TabBtnsL.AbsoluteContentSize.Y + 18) 
end) 

Frame.Parent = dogent 
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0) 
Frame.BorderSizePixel = 0 
Frame.Position = UDim2.new(0.00829315186, 0, 0.31107837, 0) 
Frame.Size = UDim2.new(0, 50, 0, 50) 
Frame.BackgroundTransparency = 1.000 

UICorner.CornerRadius = UDim.new(0, 90) 
UICorner.Parent = Frame 

Open.Parent = Frame 
Open.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
Open.BorderColor3 = Color3.fromRGB(0, 0, 0) 
Open.BorderSizePixel = 0 
Open.Size = UDim2.new(0, 50, 0, 50) 
Open.Active = true 
Open.Draggable = true 
Open.Image = "rbxassetid://79399049294493" 
Open.MouseButton1Click:Connect(function() 
Main.Visible = not Main.Visible 
Open.Image = Main.Visible and "rbxassetid://79399049294493" or "rbxassetid://79399049294493" 
end) 

UICorner_2.CornerRadius = UDim.new(0, 90) 
UICorner_2.Parent = Open 

UIG.Parent = Open 

local window = {} 

function window.Tab(window, name, icon) 
local Tab = Instance.new("ScrollingFrame") 
local TabIco = Instance.new("ImageLabel") 
local TabText = Instance.new("TextLabel") 
local TabBtn = Instance.new("TextButton") 
local TabL = Instance.new("UIListLayout") 

Tab.Name = "Tab" 
Tab.Parent = TabMain 
Tab.Active = true 
Tab.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
Tab.BackgroundTransparency = 1.000 
Tab.Size = UDim2.new(1, 0, 1, 0) 
Tab.ScrollBarThickness = 2 
Tab.Visible = false 

TabIco.Name = "TabIco" 
TabIco.Parent = TabBtns 
TabIco.BackgroundTransparency = 1.000 
TabIco.BorderSizePixel = 0 
TabIco.Size = UDim2.new(0, 24, 0, 24) 
TabIco.Image = "rbxassetid://72368339506794" or icon and "rbxassetid://"..icon 
TabIco.ImageTransparency = 0.2 

TabText.Name = "TabText" 
TabText.Parent = TabIco 
TabText.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
TabText.BackgroundTransparency = 1.000 
TabText.Position = UDim2.new(1.41666663, 0, 0, 0) 
TabText.Size = UDim2.new(0, 76, 0, 24) 
TabText.Font = Enum.Font.GothamSemibold 
TabText.Text = name 
TabText.TextColor3 = ALcolor 
TabText.TextSize = 14.000 
TabText.TextXAlignment = Enum.TextXAlignment.Left 
TabText.TextTransparency = 0.2 

TabBtn.Name = "TabBtn" 
TabBtn.Parent = TabIco 
TabBtn.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
TabBtn.BackgroundTransparency = 1.000 
TabBtn.BorderSizePixel = 0 
TabBtn.Size = UDim2.new(0, 110, 0, 24) 
TabBtn.AutoButtonColor = false 
TabBtn.Font = Enum.Font.SourceSans 
TabBtn.Text = "" 
TabBtn.TextColor3 = Color3.fromRGB(0, 0, 0) 
TabBtn.TextSize = 14.000 

TabL.Name = "TabL" 
TabL.Parent = Tab 
TabL.SortOrder = Enum.SortOrder.LayoutOrder 
TabL.Padding = UDim.new(0, 4) 

TabBtn.MouseButton1Click:Connect(function() 
spawn(function() 
Ripple(TabBtn) 
end) 
switchTab({TabIco, Tab}) 
end) 

if library.currentTab == nil then 
switchTab({TabIco, Tab}) 
end 

TabL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() 
Tab.CanvasSize = UDim2.new(0, 0, 0, TabL.AbsoluteContentSize.Y + 8) 
end) 

------------------------------------------------------AL.King音乐------------------------------------------------------- 
local sound = Instance.new("Sound") 
sound.SoundId = "rbxassetid://6797864253" 
sound.Parent = game.Workspace 
sound:Play() 
---------------分割线-------------------------------分割线-------------------------------分割线---------------- 

local tab = {} 

function tab.section(tab, name, TabVal) 
local Section = Instance.new("Frame") 
local SectionC = Instance.new("UICorner") 
local SectionText = Instance.new("TextLabel") 
local SectionOpen = Instance.new("ImageLabel") 
local SectionOpened = Instance.new("ImageLabel") 
local SectionToggle = Instance.new("ImageButton") 
local Objs = Instance.new("Frame") 
local ObjsL = Instance.new("UIListLayout") 

Section.Name = "Section" 
Section.Parent = Tab 
Section.BackgroundColor3 = zyColor 
Section.BackgroundTransparency = 1.000 
Section.BorderSizePixel = 0 
Section.ClipsDescendants = true 
Section.Size = UDim2.new(0.981000006, 0, 0, 36) 

SectionC.CornerRadius = UDim.new(0, 6) 
SectionC.Name = "SectionC" 
SectionC.Parent = Section 

SectionText.Name = "SectionText" 
SectionText.Parent = Section 
SectionText.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
SectionText.BackgroundTransparency = 1.000 
SectionText.Position = UDim2.new(0.0887396261, 0, 0, 0) 
SectionText.Size = UDim2.new(0, 401, 0, 36) 
SectionText.Font = Enum.Font.GothamSemibold 
SectionText.Text = name 
SectionText.TextColor3 = ALcolor 
SectionText.TextSize = 16.000 
SectionText.TextXAlignment = Enum.TextXAlignment.Left 

SectionOpen.Name = "SectionOpen" 
SectionOpen.Parent = SectionText 
SectionOpen.BackgroundTransparency = 1 
SectionOpen.BorderSizePixel = 0 
SectionOpen.Position = UDim2.new(0, -33, 0, 5) 
SectionOpen.Size = UDim2.new(0, 26, 0, 26) 
SectionOpen.Image = "rbxassetid://72368339506794" 

SectionOpened.Name = "SectionOpened" 
SectionOpened.Parent = SectionOpen 
SectionOpened.BackgroundTransparency = 1.000 
SectionOpened.BorderSizePixel = 0 
SectionOpened.Size = UDim2.new(0, 26, 0, 26) 
SectionOpened.Image = "rbxassetid://72368339506794" 
SectionOpened.ImageTransparency = 1.000 

SectionToggle.Name = "SectionToggle" 
SectionToggle.Parent = SectionOpen 
SectionToggle.BackgroundTransparency = 1 
SectionToggle.BorderSizePixel = 0 
SectionToggle.Size = UDim2.new(0, 26, 0, 26) 

Objs.Name = "Objs" 
Objs.Parent = Section 
Objs.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
Objs.BackgroundTransparency = 1 
Objs.BorderSizePixel = 0 
Objs.Position = UDim2.new(0, 6, 0, 36) 
Objs.Size = UDim2.new(0.986347735, 0, 0, 0) 

ObjsL.Name = "ObjsL" 
ObjsL.Parent = Objs 
ObjsL.SortOrder = Enum.SortOrder.LayoutOrder 
ObjsL.Padding = UDim.new(0, 8) 

local open = TabVal 
if TabVal ~= false then 
Section.Size = UDim2.new(0.981000006, 0, 0, open and 36 + ObjsL.AbsoluteContentSize.Y + 8 or 36) 
SectionOpened.ImageTransparency = (open and 0 or 1) 
SectionOpen.ImageTransparency = (open and 1 or 0) 
end 

SectionToggle.MouseButton1Click:Connect(function() 
open = not open 
Section.Size = UDim2.new(0.981000006, 0, 0, open and 36 + ObjsL.AbsoluteContentSize.Y + 8 or 36) 
SectionOpened.ImageTransparency = (open and 0 or 1) 
SectionOpen.ImageTransparency = (open and 1 or 0) 
end) 

ObjsL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() 
if not open then return end 
Section.Size = UDim2.new(0.981000006, 0, 0, 36 + ObjsL.AbsoluteContentSize.Y + 8) 
end) 

local section = {} 

function section.Button(section, text, callback) 
local callback = callback or function() end 
local BtnModule = Instance.new("Frame") 
local Btn = Instance.new("TextButton") 
local BtnC = Instance.new("UICorner") 

BtnModule.Name = "BtnModule" 
BtnModule.Parent = Objs 
BtnModule.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
BtnModule.BackgroundTransparency = 1.000 
BtnModule.BorderSizePixel = 0 
BtnModule.Position = UDim2.new(0, 0, 0, 0) 
BtnModule.Size=UDim2.new(0，428，0，38)
BtnModule.Transparency=0.75

Btn.Name="Btn"
Btn.Parent=BtnModule
Btn.BackgroundColor3=zyColor
Btn.BorderSizePixel=0
Btn.Size=UDim2.new(0，428，0，38)
Btn.AutoButtonColor=false
Btn.Font=枚举.Font.GothamSemibold
Btn.Text=""..text
Btn.TextColor3=ALCOLOR
Btn.TextSize=16.000
Btn.TextXAlignment=枚举.TextXAlignment.Left
Btn.BackgroundTransparency=ALTtransparency

BtnC.CornerRadius=UDim.new(0，6)
BtnC.Name="BTNC"
BtnC.Parent=Btn

Btn.MouseButton1Click:Connect(函数()
派生(函数()
波纹(Btn)
结束)
繁殖(回拨)
结束)
结束

function section:Label(text) 
local LabelModule = Instance.new("Frame") 
local TextLabel = Instance.new("TextLabel") 
local LabelC = Instance.new("UICorner") 

LabelModule.Name = "LabelModule" 
LabelModule.Parent = Objs 
LabelModule.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
LabelModule.BackgroundTransparency = 1.000 
LabelModule.BorderSizePixel = 0 
LabelModule.Position = UDim2.new(0, 0, NAN, 0) 
LabelModule.Size = UDim2.new(0, 428, 0, 19) 

TextLabel.Parent = LabelModule 
TextLabel.BackgroundColor3 = zyColor 
TextLabel.Size = UDim2.new(0, 428, 0, 22) 
TextLabel.Font = Enum.Font.GothamSemibold 
TextLabel.Text = text 
TextLabel.TextColor3 = ALcolor 
TextLabel.BackgroundTransparency = ALTransparency 
TextLabel.TextSize = 14.000 

LabelC.CornerRadius = UDim.new(0, 6) 
LabelC.Name = "LabelC" 
LabelC.Parent = TextLabel 

返回TextLabel
结束

功能区段.切换(区段、文字、旗标、启用、回呼)
本地回调=callback或函数()结束
local enabled = enabled or false 
assert(text, "No text provided") 
assert(flag, "No flag provided") 
library.flags[flag] = enabled 

local ToggleModule = Instance.new("Frame") 
local ToggleBtn = Instance.new("TextButton") 
local ToggleBtnC = Instance.new("UICorner") 
local ToggleDisable = Instance.new("Frame") 
local ToggleSwitch = Instance.new("Frame") 
local ToggleSwitchC = Instance.new("UICorner") 
local ToggleDisableC = Instance.new("UICorner") 

ToggleModule.Name = "ToggleModule" 
ToggleModule.Parent = Objs 
ToggleModule.BackgroundColor3 = Color3.fromRGB(139, 0, 255) 
ToggleModule.BackgroundTransparency = 1.000 
ToggleModule.BorderSizePixel = 0 
ToggleModule.Position = UDim2.new(0, 0, 0, 0) 
ToggleModule.Size = UDim2.new(0, 428, 0, 38) 

ToggleBtn.Name = "ToggleBtn" 
ToggleBtn.Parent = ToggleModule 
ToggleBtn.BackgroundColor3 = zyColor 
ToggleBtn.BackgroundTransparency = ALTransparency 
ToggleBtn.BorderSizePixel = 0 
ToggleBtn.Size = UDim2.new(0, 428, 0, 38) 
ToggleBtn.AutoButtonColor = false 
ToggleBtn.Font = Enum.Font.GothamSemibold 
ToggleBtn.Text = " " .. text 
ToggleBtn.TextColor3 = ALcolor 
ToggleBtn.TextSize = 16.000 
ToggleBtn.TextXAlignment = Enum.TextXAlignment.Left 

ToggleBtnC.CornerRadius = UDim.new(0, 6) 
ToggleBtnC.Name = "ToggleBtnC" 
ToggleBtnC.Parent = ToggleBtn 

ToggleDisable.Name = "ToggleDisable" 
ToggleDisable.Parent = ToggleBtn 
ToggleDisable.BackgroundColor3 = Background 
ToggleDisable.BackgroundTransparency = 0.5 
ToggleDisable.BorderSizePixel = 0 
ToggleDisable.Position = UDim2.new(0.901869178, 0, 0.208881587, 0) 
ToggleDisable.Size = UDim2.new(0, 36, 0, 22) 

ToggleSwitch.Name = "ToggleSwitch" 
ToggleSwitch.Parent = ToggleDisable 
ToggleSwitch.BackgroundColor3 = beijingColor 
ToggleSwitch.Size = UDim2.new(0, 24, 0, 22) 

ToggleSwitchC.CornerRadius = UDim.new(0, 6) 
ToggleSwitchC.Name = "ToggleSwitchC" 
ToggleSwitchC.Parent = ToggleSwitch 

ToggleDisableC.CornerRadius = UDim.new(0, 6) 
ToggleDisableC.Name = "ToggleDisableC" 
ToggleDisableC.Parent = ToggleDisable 

local funcs = { 
SetState = function(self, state) 
if state == nil then 
state = not library.flags[flag] 
end 
if library.flags[flag] == state then return end 
services.TweenService:Create(ToggleSwitch, TweenInfo.new(0.2), {Position = UDim2.new(0, (state and ToggleSwitch.Size.X.Offset / 2 or 0), 0, 0), BackgroundColor3 = (state and Color3.fromRGB(139, 0, 255) or beijingColor)}):Play() 
library.flags[flag] = state 
callback(state) 
end, 
Module = ToggleModule 
} 

if enabled ~= false then 
funcs:SetState(flag,true) 
end 

ToggleBtn.MouseButton1Click:Connect(function() 
funcs:SetState() 
end) 

return funcs 
end 

function section.Keybind(section, text, default, callback) 
local callback = callback or function() end 
assert(text, "No text provided") 
assert(default, "No default key provided") 
local default = (typeof(default) == "string" and Enum.KeyCode[default] or default) 
local banned = { Return = true; Space = true; Tab = true; Backquote = true; CapsLock = true; Escape = true; Unknown = true; } 
local shortNames = { RightControl = 'Right Ctrl', LeftControl = 'Left Ctrl', LeftShift = 'Left Shift', RightShift = 'Right Shift', Semicolon = ";", Quote = '"', LeftBracket = '[', RightBracket = ']', Equals = '=', Minus = '-', RightAlt = 'Right Alt', LeftAlt = 'Left Alt' } 

本地绑定键=默认值
本地keyTxt=(默认值和(短名称[default.Name]或default.Name)或“无”)

本地KeybindModule=Instance.new("Frame")
本地KeybindBtn=Instance.new("TextButton")
本地KeybindBtnC=Instance.new("UICorner")
本地KeybindValue=Instance.new("TextButton")
本地KeybindValueC=Instance.new("UICorner")
本地KeybindL=Instance.new("UIListLayout")
本地UIPadding=Instance.new("UIPadding")

KeybindModule.Name="KeybindModule"
KeybindModule.Parent=objs
KeybindModule.BackgroundColor3=Color3.fromRGB(139，0，255)
KeybindModule.BackgroundTransparency=1.000
KeybindModule.BorderSizePixel=0
KeybindModule.Position=UDim2.new(0，0，0)
KeybindModule.Size=UDim2.new(0，428，0，38)

KeybindBtn.Name="KeybindBtn"
KeybindBtn.Parent=KeybindModule
KeybindBtn.BackgroundColor3=zyColor
KeybindBtn.BorderSizePixel=0
KeybindBtn.Size=UDim2.new(0，428，0，38)
KeybindBtn.AutoButtonColor=false
KeybindBtn.Font=枚举.Font.GothamSemibold
KeybindBtn.Text=""..text
KeybindBtn.TextColor3 = ALcolor 
KeybindBtn.TextSize = 16.000 
KeybindBtn.TextXAlignment = Enum.TextXAlignment.Left 

KeybindBtnC.CornerRadius = UDim.new(0, 6) 
KeybindBtnC.Name = "KeybindBtnC" 
KeybindBtnC.Parent = KeybindBtn 

KeybindValue.Name = "KeybindValue" 
KeybindValue.Parent=KeybindBtn
KeybindValue.BackgroundColor3=背景
KeybindValue.BorderSizePixel=0
KeybindValue.Position=UDim2.new(0.763033211，0，0.289473683，0)
KeybindValue.Size=UDim2.new(0，100，0，28)
KeybindValue.AutoButtonColor=false
KeybindValue.Font=枚举.Font.Gotham
KeybindValue.Text=keyTxt
KeybindValue.TextColor3=Color3.fromRGB(139，0，255)
KeybindValue.TextSize=14.000

KeybindValueC.CornerRadius=UDim.new(0，6)
KeybindValueC.Name="KeybindValueC"
KeybindValueC.Parent=KeybindValue

KeybindL.Name="KeybindL"
KeybindL.Parent=KeybindBtn
KeybindL.HorizontalAlignment=Enum.HorizontalAlignment.Right
ToggleSwitchC.CornerRadius=UDim.new(0，6)
ToggleSwitchC.Name="ToggleSwitchC"

UIPadding.Parent=KeybindBtn
ToggleDisableC.CornerRadius=UDim.new(0，6)

ToggleDisableC.Parent=ToggleDisable
如果gpe，则返回结束
如果inp.UserInputType~=枚举。UserInputType。键盘，则返回结束
如果inp.keycode~=bindkey，则返回end
回调(bindKey.Name)
结束)

KeybindValue。鼠标按钮1单击：连接(函数()
KeybindValue.Text=“...”
等待()
本地密钥，UWU=服务.UserInputService.InputEnded:Wait()
本地keyname=tosstring(key.KeyCode.Name)
如果key.UserInputType~=枚举。UserInputType。键盘，则
KeybindValue.Text=keyTxt
返回
结束
如果禁止[keyName]，则
KeybindValue.Text=keyTxt
返回
结束
Ripple.ZIndex=8
Ripple.Image="rbxassetid://79399049294493"
Ripple.ImageTransparency=0.800
Ripple.ScaleType=枚举.ScaleType.Fit

Ripple.Position=UDim2.new((鼠标.X-Ripple.AbsolutePosition.X)/obj.绝对大小.X，0，(鼠标.Y-波纹.绝对位置.Y)/对象.绝对大小.y，0)
补间(波纹，{.3，'线性'，'输入输出'}，{位置=UDim2.new(-5.5，0，-5.5，0)，大小=UDim2.new(12，0，12，0)})
等待(0.15)(0.15)

等待(.3)
波纹：销毁()

结束
本地回调=回调或函数()结束
本地切换=假的
断言(标志，“未提供标志”)
--#切换标签#--
本地switchingTabs=false

如果switchingTab，则返回结束
本地旧=library.currentTab
如果旧==无则
新建[2].visible=true
library.currentTab=新建
services.TweenService：创建(新建[1]，TweenInfo.New(0.1)，{ImageTransparency=0})：播放()
services.TweenService：创建(新建[1].TabText，TweenInfo.New(0.1)，{TextTransparency=0})：播放()
返回

如果旧[1]==新[1]，则返回结束
TextboxModule.Parent=objs
TextboxModule.BroundColor3=Color3.FromRGB(139，0255)
TextboxModule.BackgroundTransparency=1.000
TextboxModule.BorderSizePixel=0
TextboxModule.Position=UDim2.new(0，0，0)
TextboxModule.Size=UDim2.new(0，428，0，38)

TextboxBack.Name="TextboxBack"
TextboxBack.Parent=TextboxModule
TextboxBack.BackgroundColor3=zyColor
TextboxBack.BackgroundTransparency=ALTtransparency
TextboxBack.BorderSizePixel=0
TextboxBack.Size=UDim2.new(0，428，0，38)
TextboxBack.AutoButtonColor=false
TextboxBack.Font=枚举。字体.哥谭半标
TextboxBack.Text=""..Text
TextboxBack.TextColor3=ALCOLOR
TextboxBack.TextSize=16.000
TextboxBack.TextXAlignment=枚举.TextXAlignment.Left

TextboxBackC.CornerRadius=UDim.new(0，6)
TextboxBackC.Name="TextboxBackC"
TextboxBackC.Parent=TextboxBack

BoxBG.Name="BoxBG"
SectionToggle。鼠标按钮1单击：连接(函数()
打开=未打开
Section.Size=UDim2.new(0.981000006，0，0，open and36+ObjsL.AbsoluteContentSize.Y+8或36)
SectionOpened.ImageTransparency=(打开且0或1)
SectionOpen.ImageTransparency=(打开且为1或0)
结束)
BoxBG.Font=枚举。字体.哥谭
ObjsL:GetPropertyChangedSignal("AbsoluteContentSize")：连接(函数()
如果未打开，则返回端
部分。size=UDim2.新建(0.981000006，0，0，36+ObjsL.绝对内容大小.y+8)

BoxBGC.CornerRadius=UDim.new(0，6)
局部段={}
BoxBGC.Parent=BoxBG

本地回调=回调或函数()结束
本地BtnModule=Instance.new("Frame")
本地BTN=Instance.new("TextButton")
本地BTNC=Instance.new("UICorner")
TextBox.Size=UDim2.new(1，0，1，0)
BtnModule.Name="BtnModule"
BtnModule.Parent=objs
BtnModule。BroundColor3=Color3。FromRGB(139，0，255)
BtnModule.BackgroundTransparency=1.000

BtnModule.Position=UDim2.new(0，0，0)
TextboxBackL.Parent=TextboxBack
TextboxBackL.水平对齐=枚举。水平对齐。正确的
TextboxBackL.SortOrder=枚举.SortOrder.LayoutOrder
TextboxBackL.VerticalAlignment=枚举.VerticalAlignment.Center

TextboxBackP.Name="TextboxBackP"
